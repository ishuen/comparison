doctype html
html
  head
    title= 'experiment 2'
    meta(name='viewport' content='width=device-width, initial-scale=1')
    link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css')
  body
    script(src='http://d3js.org/d3.v3.min.js', charset='utf-8')
    script(src='https://code.jquery.com/jquery-3.3.1.min.js', charset='utf-8')
    script(src='/scripts/analysis.js', type='text/javascript')
    script(src="https://cdn.plot.ly/plotly-latest.min.js", charset='utf-8')
    script.
      let sortings = !{JSON.stringify(sortings)}
    div(class='container-fluid')
      div(class='row')
        div(class='col-sm-10')
          h2 User Sorting Results: user ID = #{userId}
      - var rowNum = sortings.length
      - var i = 1
      while i <= rowNum
        div(class='row')
          div(class='col-sm-3')
            div(class='col-sm-12', id='lineChart' + i)
            div(class='col-sm-12', id='compareTable' + i)
              table(class='table table-condensed table-bordered')
                tr
                  th(colspan='2') Minimum edit distance
                tr
                  th user-pareto
                  td #{sortings[i-1].diff[0].distance}
                tr
                  th user-heuristic
                  td #{sortings[i-1].diff[1].distance}
                tr
                  th user-genetic
                  td #{sortings[i-1].diff[2].distance}
                tr
                  th similar to
                  th #{sortings[i-1].sim}
          div(class='col-sm-7', id='dualYChart' + i)
            div(class='col-sm-6', id='dualYChart' + i + 'user')
            div(class='col-sm-6', id='dualYChart' + i + 'pareto')
            div(class='col-sm-6', id='dualYChart' + i + 'heuristic')
            div(class='col-sm-6', id='dualYChart' + i + 'genetic')
        hr
        - i++
    script.
      for (let i = 0; i < sortings.length; i++) {
        drawLineChart(sortings[i], 'lineChart' + Number(i + 1))
        drawDualYChart(sortings[i], 'dualYChart' + Number(i + 1))
      }
