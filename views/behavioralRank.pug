doctype html
html
  head
    title= behavioralRank
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='stylesheet', href='/stylesheets/separator.css')
    link(rel='stylesheet', href='/stylesheets/axisStyle.css')
  body
    div(class= 'graph')
      script(src='http://d3js.org/d3.v3.min.js', charset='utf-8')
      script.
        function drawPath (mid, path) {
          var line_stroke = 'red'
          var polyline_set = []
          for (i = 0; i < path.length - 1; i++) {
            if (path[i]['id'] === mid['id']) { line_stroke = 'green' }
            var point1 = path[i]
            var point2 = path[i + 1]
            var points = (70 * point1['RRR\''] + 20) + ',' + (520 - 70 * point1['T\'c']) + ' ' + (70 * point2['RRR\''] + 20) + ',' + (520 - 70 * point2['T\'c'])
            var style = 'fill:none;stroke:' + line_stroke + ';stroke-width:2'  
            var polyline = [points,style]
            polyline_set.push(polyline)
          }
          svg.selectAll('polyline')
            .data(polyline_set)
            .enter()
            .append('polyline')
            .attr('points', function (d, i) { return d[0] })
            .attr('style', function (d, i) { return d[1] })
        }

        let data = !{JSON.stringify(data)}
        let defaultPoint = !{JSON.stringify(defaultPoint)}
        console.log(data)
        
        var width = 550
        var height = 550
        var svg = d3.select('body')
          .append('svg')
          .attr('width', width)
          .attr('height', height)
        var dataset = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        var linearX = d3.scale.linear()
                      .domain([0, d3.max(dataset)])
                      .range([0, 500])
        var linearY = d3.scale.linear()
                      .domain([0, d3.max(dataset)])
                      .range([500, 0])
        var axisX = d3.svg.axis()
                    .scale(linearX)
                    .orient('bottom')
                    .ticks(11)
        svg.append('g')
          .attr('class', 'axis')
          .attr('transform', 'translate(20,520)')
          .call(axisX)
        var axisY = d3.svg.axis()
                    .scale(linearY) 
                    .orient('left')
                    .ticks(11)     
        svg.append('g')
          .attr('class', 'axis')
          .attr('transform', 'translate(20,20)')
          .call(axisY)
        svg.selectAll('circle')
          .data(data)
          .enter()
          .append('circle')
          .attr('stroke','blue')
          .attr('stroke-width','1')
          .attr('r','5')
          .attr('fill','blue')
          .attr('id', function (d, i) { return d['id'] })
          .attr('cx', function (d, i) { return d['RRR\''] * 70 + 20 })
          .attr('cy', function (d, i) {
            return 520 - d['T\'c'] * 70
          })
        drawPath(defaultPoint, data)

    div(class= 'table')
      include table.pug